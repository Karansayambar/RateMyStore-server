// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  address   String
  role      Role
  ratings   Rating[]
  stores    Store[]   @relation("StoreOwner")
   createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

    @@map("users")

}

model Store {
  id        Int       @id @default(autoincrement())
  name      String
  email     String
  address   String
  ratings   Rating[]
  ownerId   Int
  owner     User      @relation("StoreOwner", fields: [ownerId], references: [id], onDelete: Cascade)
  createdAt DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
@@map("stores")
}


model Rating {
  id        Int       @id @default(autoincrement())
  rating    Int       // 1 to 5
  userId    Int
  storeId   Int
  user      User      @relation(fields: [userId], references: [id])
  store     Store     @relation(fields: [storeId], references: [id])
  createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt

  @@unique([userId, storeId])
  @@map("ratings")
}



enum Role {
  ADMIN
  NORMAL_USER
  STORE_OWNER
}